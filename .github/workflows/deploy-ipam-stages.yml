# This workflow deploys a the AIPAS IPAM Azure Function
name: Deploy-Ipam-Stages

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: "./src/function/"  # set this to the path to your web app project, defaults to the repository root

# Controls when the action will run. 
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-and-deploy-ipam-dev:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # set secret values per environment
    environment: "development"
    #set stage values in job env
    env:
      AZURE_FUNCTIONAPP_NAME: "svs3-aipas"    # set this to your application's name
      RESOURCEGROUPNAME: "rg-aipas-svs3"    # Set this variable for the Resource Group Name where to deploy the Azure Function. This needs to be the same RG as where the Storage Account was being deployed.
      SUBSCRIPTIONID: "8e65589a-9d2b-4d0d-a110-33a515a7f266"  # Set this variable to deploy the above Resource Group in a certain Subscription
      REGION: "westeurope" # Set this variable to have the Resource Group and Storage Account deployed in a certain location

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - run: |
          echo "${{ env.RESOURCEGROUPNAME }}"
          echo "${{ env.REGION }}"
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Login to Azure
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS}}
      - name: Azure CLI Action
        uses: Azure/cli@1.0.4
        with:
          inlineScript: |
            az group create --name ${{ env.RESOURCEGROUPNAME }} --location ${{ env.REGION }}
      # Deploy Storage Account
      - name: Deploy Azure Resource Manager (ARM) Template
        uses: Azure/arm-deploy@v1
        id: deploy-storage-account
        with:
          scope: resourcegroup
          subscriptionId: ${{ env.SUBSCRIPTIONID }}
          region: ${{ env.REGION }}
          resourceGroupName: ${{ env.RESOURCEGROUPNAME }}
          template: src/templates/azuredeploy.json          
          deploymentMode: incremental
          deploymentName: "AIPAS-storageaccount"
          parameters: src/templates/azuredeploy.parameters.json
      # Build Azure Function. Copies PowerShell IPAM Module to Azure Function
      - name: Run PowerShell Bootstrap script
        run: .\bootstrap.ps1
        shell: pwsh
      - name: Copy IPAM PowerShell module to Azure Function
        run: Invoke-Build -Task CopyModuleFiles -File './aipas.build.ps1'
        shell: pwsh
      # Create Function App in Azure
      - name: Azure CLI Action - Create Function App
        uses: Azure/cli@1.0.4
        with:
          # Specify the script here
          inlineScript: |
            az functionapp create --resource-group ${{ env.RESOURCEGROUPNAME }} --consumption-plan-location ${{ env.REGION }} --runtime powershell --functions-version 3 --name ${{ env.AZURE_FUNCTIONAPP_NAME }} --storage-account ${{ steps.deploy-storage-account.outputs.StorageAccountName }}
      # Publish Azure Function${{needs.build-and-deploy-storageaccount.outputs.ResourceGroupName}}
      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
      # Configure App Settings
      - name: 'Configure App Settings'
        uses: azure/appservice-settings@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          #slot-name: 'staging'  # Optional and needed only if the settings have to be configured on the specific deployment slot
          app-settings-json: '${{ secrets.APP_SETTINGS }}'
        id: settings

  build-and-deploy-ipam-prod:
    needs: build-and-deploy-ipam-dev
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # set secret values per environment
    environment: "production"
    #set stage values in job env
    env:
      AZURE_FUNCTIONAPP_NAME: "psag-aipas"    # set this to your application's name
      RESOURCEGROUPNAME: "rg-aipas-psag"    # Set this variable for the Resource Group Name where to deploy the Azure Function. This needs to be the same RG as where the Storage Account was being deployed.
      SUBSCRIPTIONID: "bf644661-620e-4141-8c28-da4ea0ba4d1a"  # Set this variable to deploy the above Resource Group in a certain Subscription
      REGION: "westeurope" # Set this variable to have the Resource Group and Storage Account deployed in a certain location

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - run: |
          echo "${{ env.RESOURCEGROUPNAME }}"
          echo "${{ env.REGION }}"
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Login to Azure
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS}}
      - name: Azure CLI Action
        uses: Azure/cli@1.0.4
        with:
          inlineScript: |
            az group create --name ${{ env.RESOURCEGROUPNAME }} --location ${{ env.REGION }}
      # Deploy Storage Account
      - name: Deploy Azure Resource Manager (ARM) Template
        uses: Azure/arm-deploy@v1
        id: deploy-storage-account
        with:
          scope: resourcegroup
          subscriptionId: ${{ env.SUBSCRIPTIONID }}
          region: ${{ env.REGION }}
          resourceGroupName: ${{ env.RESOURCEGROUPNAME }}
          template: src/templates/azuredeploy.json          
          deploymentMode: incremental
          deploymentName: "AIPAS-storageaccount"
          parameters: src/templates/azuredeploy.parameters.json
      # Build Azure Function. Copies PowerShell IPAM Module to Azure Function
      - name: Run PowerShell Bootstrap script
        run: .\bootstrap.ps1
        shell: pwsh
      - name: Copy IPAM PowerShell module to Azure Function
        run: Invoke-Build -Task CopyModuleFiles -File './aipas.build.ps1'
        shell: pwsh
      # Create Function App in Azure
      - name: Azure CLI Action - Create Function App
        uses: Azure/cli@1.0.4
        with:
          # Specify the script here
          inlineScript: |
            az functionapp create --resource-group ${{ env.RESOURCEGROUPNAME }} --consumption-plan-location ${{ env.REGION }} --runtime powershell --functions-version 3 --name ${{ env.AZURE_FUNCTIONAPP_NAME }} --storage-account ${{ steps.deploy-storage-account.outputs.StorageAccountName }}
      # Login to Azure (again)
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS}}
      # Publish Azure Function${{needs.build-and-deploy-storageaccount.outputs.ResourceGroupName}}
      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
      # Configure App Settings
      - name: 'Configure App Settings'
        uses: azure/appservice-settings@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          #slot-name: 'staging'  # Optional and needed only if the settings have to be configured on the specific deployment slot
          app-settings-json: '${{ secrets.APP_SETTINGS }}'
        id: settings
